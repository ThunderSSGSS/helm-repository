{{- $lista := list .Values.ingress.host }}
{{- $hosts := .Values.ingress.hosts | default $lista }}

{{- $root := . }}
{{- if .Values.ingress.create -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    {{- if .Values.ingress.enable_tls }}
    cert-manager.io/cluster-issuer: "{{ .Values.ingress.clusterIssuer }}"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    {{- end }}

    {{- range $key, $value := .Values.ingress.additionalAnnotations }}
    {{- if and (eq $key "nginx.ingress.kubernetes.io/configuration-snippet") $root.Values.ingress.errorPage.enable }}
    {{ $key | nindent 4 }}: |
      {{- $value | nindent 6 }}
      error_page 500 502 503 504 {{ $root.Values.ingress.errorPage.path }};
    {{- else }}
    {{- $key | nindent 4 }}: |
      {{- $value | nindent 6 }}
    {{- end }}
    {{- end }}

    {{- if and (not .Values.ingress.additionalAnnotations) .Values.ingress.errorPage.enable }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      error_page 500 502 503 504 {{ .Values.ingress.errorPage.path }};
    {{- end }}
    
spec:
  {{- if .Values.ingress.enable_tls }}
  tls:
  - hosts:
    {{- range $hosts }}
    - '{{.}}'
    {{- end }}
    {{- if .Values.ingress.tlsSecretName }}
    secretName: {{ .Values.ingress.tlsSecretName }}
    {{- else }}
    secretName: {{ .Values.name }}-tls-certificate
    {{- end }}
  {{- end }}
  rules:
  {{- range $hosts }}
  - host: '{{.}}'
    http:
      paths:
      {{- range $root.Values.ingress.paths }}
        - path: {{ .path }}
          pathType: {{ .pathType }}
          backend:
            service:
              name: {{ $root.Values.name }}
              port:
                number: {{ .servicePort }}
      {{- end }}
  {{- end }}


{{- if .Values.ingress.redirectHosts }}
##_________________________________REDIRECT_HOSTS_INGRESS___________________________________###
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name }}-redirects
  annotations:
    kubernetes.io/ingress.class: "nginx"
    {{- if .Values.ingress.enable_tls }}
    cert-manager.io/cluster-issuer: "{{ .Values.ingress.clusterIssuer }}"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      return 301 https://{{ first $hosts }}$request_uri;
    {{- else }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      return 301 http://{{ first $hosts }}$request_uri;
    {{- end }}
    
spec:
  {{- if .Values.ingress.enable_tls }}
  tls:
  - hosts: 
    {{- range .Values.ingress.redirectHosts }}
    - '{{.}}'
    {{- end }}
    secretName: {{ .Values.name }}-redirects-tls-certificate
  {{- end }}
  rules:
  {{- range .Values.ingress.redirectHosts }}
  - host: '{{.}}'
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: {{ $root.Values.name }}
              port:
                number: 80
  {{- end }}
{{- end }}


{{- if .Values.ingress.cache.enable }}
##_________________________________STATIC_CACHE_INGRESS___________________________________###
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name }}-cache
  annotations:
    kubernetes.io/ingress.class: "nginx"
    {{- if .Values.ingress.enable_tls }}
    cert-manager.io/cluster-issuer: "{{ .Values.ingress.clusterIssuer }}"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    {{- end }}
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/service-upstream: "true" # use services instead of pods
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      {{- .Values.ingress.cache.configuration | nindent 6 }}
      {{- if .Values.ingress.errorPage.enable }}
      error_page 500 502 503 504 {{ $root.Values.ingress.errorPage.path }};
      {{- end }}
spec:
  {{- if .Values.ingress.enable_tls }}
  tls:
  - hosts:
    {{- range $hosts }}
    - '{{.}}'
    {{- end }}
    {{- if .Values.ingress.tlsSecretName }}
    secretName: {{ .Values.ingress.tlsSecretName }}
    {{- else }}
    secretName: {{ .Values.name }}-tls-certificate
    {{- end }}
  {{- end }}
  rules:
  {{- range $hosts }}
  - host: '{{.}}'
    http:
      paths:
        - path: {{ $root.Values.ingress.cache.pathRegex }}
          pathType: Prefix
          backend:
            service:
              name: {{ $root.Values.name }}
              port:
                number: {{ $root.Values.ingress.cache.servicePort }}
  {{- end }}
{{- end }}


{{- if .Values.ingress.errorPage.enable }}
##_________________________________ERROR_INGRESS___________________________________###
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.name }}-error
  annotations:
    kubernetes.io/ingress.class: "nginx"
    {{- if .Values.ingress.enable_tls }}
    cert-manager.io/cluster-issuer: "{{ .Values.ingress.clusterIssuer }}"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    {{- end }}
    nginx.ingress.kubernetes.io/backend-protocol: "{{ .Values.ingress.errorPage.protocol }}" 
spec:
  {{- if .Values.ingress.enable_tls }}
  tls:
  - hosts: 
    {{- range $hosts }}
    - '{{.}}'
    {{- end }}
    {{- if .Values.ingress.tlsSecretName }}
    secretName: {{ .Values.ingress.tlsSecretName }}
    {{- else }}
    secretName: {{ .Values.name }}-tls-certificate
    {{- end }}
  {{- end }}
  rules:
  {{- range $hosts }}
  - host: '{{.}}'
    http:
      paths:
        - path: {{ $root.Values.ingress.errorPage.path }}
          pathType: Exact
          backend:
            service:
              name: {{ $root.Values.name }}-error
              port:
                number: {{ $root.Values.ingress.errorPage.port }}
  {{- end }}
{{- end }}

{{- end }}